/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as EmployeesIndexImport } from './routes/employees/index'
import { Route as CafesIndexImport } from './routes/cafes/index'
import { Route as EmployeesEditImport } from './routes/employees/edit'
import { Route as EmployeesCreateImport } from './routes/employees/create'
import { Route as CafesEditImport } from './routes/cafes/edit'
import { Route as CafesAddImport } from './routes/cafes/add'

// Create/Update Routes

const EmployeesIndexRoute = EmployeesIndexImport.update({
  id: '/employees/',
  path: '/employees/',
  getParentRoute: () => rootRoute,
} as any)

const CafesIndexRoute = CafesIndexImport.update({
  id: '/cafes/',
  path: '/cafes/',
  getParentRoute: () => rootRoute,
} as any)

const EmployeesEditRoute = EmployeesEditImport.update({
  id: '/employees/edit',
  path: '/employees/edit',
  getParentRoute: () => rootRoute,
} as any)

const EmployeesCreateRoute = EmployeesCreateImport.update({
  id: '/employees/create',
  path: '/employees/create',
  getParentRoute: () => rootRoute,
} as any)

const CafesEditRoute = CafesEditImport.update({
  id: '/cafes/edit',
  path: '/cafes/edit',
  getParentRoute: () => rootRoute,
} as any)

const CafesAddRoute = CafesAddImport.update({
  id: '/cafes/add',
  path: '/cafes/add',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/cafes/add': {
      id: '/cafes/add'
      path: '/cafes/add'
      fullPath: '/cafes/add'
      preLoaderRoute: typeof CafesAddImport
      parentRoute: typeof rootRoute
    }
    '/cafes/edit': {
      id: '/cafes/edit'
      path: '/cafes/edit'
      fullPath: '/cafes/edit'
      preLoaderRoute: typeof CafesEditImport
      parentRoute: typeof rootRoute
    }
    '/employees/create': {
      id: '/employees/create'
      path: '/employees/create'
      fullPath: '/employees/create'
      preLoaderRoute: typeof EmployeesCreateImport
      parentRoute: typeof rootRoute
    }
    '/employees/edit': {
      id: '/employees/edit'
      path: '/employees/edit'
      fullPath: '/employees/edit'
      preLoaderRoute: typeof EmployeesEditImport
      parentRoute: typeof rootRoute
    }
    '/cafes/': {
      id: '/cafes/'
      path: '/cafes'
      fullPath: '/cafes'
      preLoaderRoute: typeof CafesIndexImport
      parentRoute: typeof rootRoute
    }
    '/employees/': {
      id: '/employees/'
      path: '/employees'
      fullPath: '/employees'
      preLoaderRoute: typeof EmployeesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/cafes/add': typeof CafesAddRoute
  '/cafes/edit': typeof CafesEditRoute
  '/employees/create': typeof EmployeesCreateRoute
  '/employees/edit': typeof EmployeesEditRoute
  '/cafes': typeof CafesIndexRoute
  '/employees': typeof EmployeesIndexRoute
}

export interface FileRoutesByTo {
  '/cafes/add': typeof CafesAddRoute
  '/cafes/edit': typeof CafesEditRoute
  '/employees/create': typeof EmployeesCreateRoute
  '/employees/edit': typeof EmployeesEditRoute
  '/cafes': typeof CafesIndexRoute
  '/employees': typeof EmployeesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/cafes/add': typeof CafesAddRoute
  '/cafes/edit': typeof CafesEditRoute
  '/employees/create': typeof EmployeesCreateRoute
  '/employees/edit': typeof EmployeesEditRoute
  '/cafes/': typeof CafesIndexRoute
  '/employees/': typeof EmployeesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/cafes/add'
    | '/cafes/edit'
    | '/employees/create'
    | '/employees/edit'
    | '/cafes'
    | '/employees'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/cafes/add'
    | '/cafes/edit'
    | '/employees/create'
    | '/employees/edit'
    | '/cafes'
    | '/employees'
  id:
    | '__root__'
    | '/cafes/add'
    | '/cafes/edit'
    | '/employees/create'
    | '/employees/edit'
    | '/cafes/'
    | '/employees/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  CafesAddRoute: typeof CafesAddRoute
  CafesEditRoute: typeof CafesEditRoute
  EmployeesCreateRoute: typeof EmployeesCreateRoute
  EmployeesEditRoute: typeof EmployeesEditRoute
  CafesIndexRoute: typeof CafesIndexRoute
  EmployeesIndexRoute: typeof EmployeesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  CafesAddRoute: CafesAddRoute,
  CafesEditRoute: CafesEditRoute,
  EmployeesCreateRoute: EmployeesCreateRoute,
  EmployeesEditRoute: EmployeesEditRoute,
  CafesIndexRoute: CafesIndexRoute,
  EmployeesIndexRoute: EmployeesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/cafes/add",
        "/cafes/edit",
        "/employees/create",
        "/employees/edit",
        "/cafes/",
        "/employees/"
      ]
    },
    "/cafes/add": {
      "filePath": "cafes/add.tsx"
    },
    "/cafes/edit": {
      "filePath": "cafes/edit.tsx"
    },
    "/employees/create": {
      "filePath": "employees/create.tsx"
    },
    "/employees/edit": {
      "filePath": "employees/edit.tsx"
    },
    "/cafes/": {
      "filePath": "cafes/index.tsx"
    },
    "/employees/": {
      "filePath": "employees/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
